Index: src/org/thechiselgroup/choosel/protovis/public/protovis-3.2-PATCHED/protovis-d3.2.js
===================================================================
--- src/org/thechiselgroup/choosel/protovis/public/protovis-3.2-PATCHED/protovis-d3.2.js	(revision 903)
+++ src/org/thechiselgroup/choosel/protovis/public/protovis-3.2-PATCHED/protovis-d3.2.js	(working copy)
@@ -146,6 +146,13 @@
 };
 
 /**
+ * isArray function for robust array detection across frames.
+ * 
+ * @see http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/
+ */
+pv.isArray = function(o) { return Object.prototype.toString.call(o) === '[object Array]'; }
+
+/**
  * Returns the passed-in argument, <tt>x</tt>; the identity function. This method
  * is provided for convenience since it is used as the default behavior for a
  * number of property functions.
@@ -2424,7 +2431,7 @@
     var array = [];
     for (var k in map) {
       var v = map[k];
-      array.push({ key: k, values: (v instanceof Array) ? v : entries(v) });
+      array.push({ key: k, values: (pv.isArray(v)) ? v : entries(v) });
     };
     return array;
   }
@@ -2466,7 +2473,7 @@
   function rollup(map) {
     for (var key in map) {
       var value = map[key];
-      if (value instanceof Array) {
+      if (pv.isArray(value)) {
         map[key] = f(value);
       } else {
         rollup(value);
@@ -3074,7 +3081,7 @@
   scale.domain = function(array, min, max) {
     if (arguments.length) {
       var o; // the object we use to infer the domain type
-      if (array instanceof Array) {
+      if (pv.isArray(array)) {
         if (arguments.length < 2) min = pv.identity;
         if (arguments.length < 3) max = min;
         o = array.length && min(array[0]);
@@ -3720,7 +3727,7 @@
    */
   scale.domain = function(array, f) {
     if (arguments.length) {
-      array = (array instanceof Array)
+      array = (pv.isArray(array))
           ? ((arguments.length > 1) ? pv.map(array, f) : array)
           : Array.prototype.slice.call(arguments);
 
@@ -3769,7 +3776,7 @@
    */
   scale.range = function(array, f) {
     if (arguments.length) {
-      r = (array instanceof Array)
+      r = (pv.isArray(array))
           ? ((arguments.length > 1) ? pv.map(array, f) : array)
           : Array.prototype.slice.call(arguments);
       if (typeof r[0] == "string") r = r.map(pv.color);
@@ -3995,7 +4002,7 @@
    */
   scale.domain = function(array, f) {
     if (arguments.length) {
-      d = (array instanceof Array)
+      d = (pv.isArray(array))
           ? pv.map(array, f)
           : Array.prototype.slice.call(arguments);
       d.sort(pv.naturalOrder);
@@ -15198,7 +15205,7 @@
    */
   scale.domain = function(array, f) {
     if (arguments.length) {
-      d = (array instanceof Array)
+      d = (pv.isArray(array))
           ? ((arguments.length > 1) ? pv.map(array, f) : array)
           : Array.prototype.slice.call(arguments);
       if (d.length > 1) {
